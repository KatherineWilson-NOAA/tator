apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: tator-spot
  region: us-east-2
  version: "1.17"
vpc:
  subnets:
    private:
      us-east-2a:
        id: "subnet-0578ad872189527fc"
      us-east-2b:
        id: "subnet-02a883a9ceb6c9b1d"
      us-east-2c:
        id: "subnet-0f825d63f5d339291"
    public:
      us-east-2a:
        id: "subnet-0c6988232799dd84f"
      us-east-2b:
        id: "subnet-09e92e10120fa3914"
      us-east-2c:
        id: "subnet-08476848ecab76d8e"
nodeGroups:
  - name: ng-m5-xlarge-ondemand
    instanceType: m5.xlarge
    labels:
      cpuWorker: "no"
      gpuWorker: "no"
      webServer: "yes"
      dbServer: "no"
      lifecycle: Ec2OnDemand
      aws.amazon.com/spot: "false"
    minSize: 1
    maxSize: 100
    desiredCapacity: 1
    tags:
      k8s.io/cluster-autoscaler/node-template/label/lifecycle: Ec2OnDemand
      k8s.io/cluster-autoscaler/node-template/label/cpuWorker: "no"
      k8s.io/cluster-autoscaler/node-template/label/gpuWorker: "no"
      k8s.io/cluster-autoscaler/node-template/label/webServer: "yes"
      k8s.io/cluster-autoscaler/node-template/label/dbServer: "no"
    iam:
      withAddonPolicies:
        autoScaler: true
  - name: ng-64vcpu-256gb-spot
    minSize: 0
    maxSize: 100
    desiredCapacity: 0
    instancesDistribution:
      instanceTypes: ["m5.16xlarge", "m5n.16xlarge", "m5d.16xlarge", "m5dn.16xlarge", "m5a.16xlarge", "m4.16xlarge"] 
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
      spotAllocationStrategy: capacity-optimized
    labels:
      cpuWorker: "yes"
      gpuWorker: "no"
      webServer: "no"
      dbServer: "no"
      lifecycle: Ec2Spot
      intent: apps
      aws.amazon.com/spot: "true"
    tags:
      k8s.io/cluster-autoscaler/node-template/label/lifecycle: Ec2Spot
      k8s.io/cluster-autoscaler/node-template/label/intent: apps
      k8s.io/cluster-autoscaler/node-template/label/cpuWorker: "yes"
      k8s.io/cluster-autoscaler/node-template/label/gpuWorker: "no"
      k8s.io/cluster-autoscaler/node-template/label/webServer: "no"
      k8s.io/cluster-autoscaler/node-template/label/dbServer: "no"
    iam:
      withAddonPolicies:
        autoScaler: true
  - name: ng-32vcpu-128gb-spot
    minSize: 0
    maxSize: 100
    desiredCapacity: 0
    instancesDistribution:
      instanceTypes: ["m5.8xlarge", "m5n.8xlarge", "m5d.8xlarge", "m5dn.8xlarge", "m5a.8xlarge"] 
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
      spotAllocationStrategy: capacity-optimized
    labels:
      cpuWorker: "yes"
      gpuWorker: "no"
      webServer: "no"
      dbServer: "no"
      lifecycle: Ec2Spot
      intent: apps
      aws.amazon.com/spot: "true"
    tags:
      k8s.io/cluster-autoscaler/node-template/label/lifecycle: Ec2Spot
      k8s.io/cluster-autoscaler/node-template/label/intent: apps
      k8s.io/cluster-autoscaler/node-template/label/cpuWorker: "yes"
      k8s.io/cluster-autoscaler/node-template/label/gpuWorker: "no"
      k8s.io/cluster-autoscaler/node-template/label/webServer: "no"
      k8s.io/cluster-autoscaler/node-template/label/dbServer: "no"
    iam:
      withAddonPolicies:
        autoScaler: true
  - name: ng-gpu-spot
    minSize: 0
    maxSize: 100
    ami: ami-0336518103b040cd0
    desiredCapacity: 0
    instancesDistribution:
      instanceTypes: ["g4dn.2xlarge"] 
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 0
      spotAllocationStrategy: capacity-optimized
    labels:
      cpuWorker: "no"
      gpuWorker: "yes"
      webServer: "no"
      dbServer: "no"
      lifecycle: Ec2Spot
      intent: apps
      aws.amazon.com/spot: "true"
    tags:
      k8s.io/cluster-autoscaler/node-template/label/lifecycle: Ec2Spot
      k8s.io/cluster-autoscaler/node-template/label/intent: apps
      k8s.io/cluster-autoscaler/node-template/label/cpuWorker: "no"
      k8s.io/cluster-autoscaler/node-template/label/gpuWorker: "yes"
      k8s.io/cluster-autoscaler/node-template/label/webServer: "no"
      k8s.io/cluster-autoscaler/node-template/label/dbServer: "no"
    iam:
      withAddonPolicies:
        autoScaler: true
