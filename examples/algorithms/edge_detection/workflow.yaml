apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: find-edges-
spec:
  entrypoint: pipeline
  ttlSecondsAfterFinished: 30
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: nfs-client
      resources:
        requests:
          storage: 100Mi
  templates:
  - name: pipeline
    steps:
    - - name: setup
        template: setup
    - - name: find-edges
        template: find-edges
    - - name: teardown
        template: teardown
  - name: setup
    script:
      image: localhost:5000/find_edges
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
      env:
      - name: TATOR_MEDIA_IDS
        value: "{{workflow.parameters.media_ids}}"
      - name: TATOR_HOST
        value: "{{workflow.parameters.host}}"
      - name: TATOR_AUTH_TOKEN
        value: "{{workflow.parameters.rest_token}}"
      - name: TATOR_PROJECT_ID
        value: "{{workflow.parameters.project_id}}"
      volumeMounts:
      - name: workdir
        mountPath: /work
      command: [python3]
      args: [/setup.py]
  - name: find-edges
    script:
      image: localhost:5000/find_edges
      resources:
        limits:
          cpu: 1000m
          memory: 500Mi
      env:
      - name: TATOR_MEDIA_IDS
        value: "{{workflow.parameters.media_ids}}"
      - name: TATOR_HOST
        value: "{{workflow.parameters.host}}"
      - name: TATOR_AUTH_TOKEN
        value: "{{workflow.parameters.rest_token}}"
      - name: TATOR_PROJECT_ID
        value: "{{workflow.parameters.project_id}}"
      - name: TATOR_WORK_DIR
        value: /work
      volumeMounts:
      - name: workdir
        mountPath: /work
      command: [python3]
      args: [/find_edges.py]
  - name: teardown
    script:
      image: localhost:5000/find_edges
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
      env:
      - name: TATOR_MEDIA_IDS
        value: "{{workflow.parameters.media_ids}}"
      - name: TATOR_HOST
        value: "{{workflow.parameters.host}}"
      - name: TATOR_AUTH_TOKEN
        value: "{{workflow.parameters.rest_token}}"
      - name: TATOR_PROJECT_ID
        value: "{{workflow.parameters.project_id}}"
      volumeMounts:
      - name: workdir
        mountPath: /work
      command: [python3]
      args: [/teardown.py]

