.d-flex {
  display: flex;
}

.d-inline-flex {
  display: inline-flex;
}

.flex-column {
  flex-direction: column;
}

.flex-grow {
  flex-grow: 1;
}

.flex-justify-center {
  justify-content: center;
}

.flex-justify-between {
  justify-content: space-between;
}

.flex-justify-right {
  justify-content: flex-end;
}

.flex-items-center {
  align-items: center;
}

.position-relative {
  position: relative;
}

.clearfix:after {
    clear: both;
}

.clearfix:after, .clearfix:before {
    display: table;
    content: "";
}

.rounded-1 {
  border-radius: 3px;
}

.rounded-2 {
  border-radius: 6px;
}

.rounded-3 {
  border-radius: 10px;
}

.rounded-bottom-2 {
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}

.circle {
  border-radius: 50%;
}

/*
* Responsive Grid
*/
.col-1 { width: (1 / 12 * 100%); }
.col-2 { width: (2 / 12 * 100%); }
.col-3 { width: (3 / 12 * 100%); }
.col-4 { width: (4 / 12 * 100%); }
.col-5 { width: (5 / 12 * 100%); }
.col-6 { width: (6 / 12 * 100%); }
.col-7 { width: (7 / 12 * 100%); }
.col-8 { width: (8 / 12 * 100%); }
.col-9 { width: (9 / 12 * 100%); }
.col-10 { width: (10 / 12 * 100%); }
.col-11 { width: (11 / 12 * 100%); }
.col-12 { width: 100% !important; }

@each $breakpoint in map-keys($breakpoints) {
  .col-#{$breakpoint}-1 { width: ( 1 / 12 * 100%); }
  .col-#{$breakpoint}-2 { width: ( 2 / 12 * 100%); }
  .col-#{$breakpoint}-3 { width: ( 3 / 12 * 100%); }
  .col-#{$breakpoint}-4 { width: ( 4 / 12 * 100%); }
  .col-#{$breakpoint}-5 { width: ( 5 / 12 * 100%); }
  .col-#{$breakpoint}-6 { width: ( 6 / 12 * 100%); }
  .col-#{$breakpoint}-7 { width: ( 7 / 12 * 100%); }
  .col-#{$breakpoint}-8 { width: ( 8 / 12 * 100%); }
  .col-#{$breakpoint}-9 { width: ( 9 / 12 * 100%); }
  .col-#{$breakpoint}-10 { width: ( 10 / 12 * 100%); }
  .col-#{$breakpoint}-11 { width: ( 11 / 12 * 100%); }
  .col-#{$breakpoint}-12 { width: 100%; }
}

// Gutters
// Apply padding and a negative margin to the outside of the container
@mixin gutters ($gutter-width: $spacer-3) {
  margin-right: -$gutter-width;
  margin-left: -$gutter-width;

  > [class*="col-"] {
    padding-right: $gutter-width !important;
    padding-left: $gutter-width !important;
  }
}

.gutter {
  @include gutters($spacing-3);
}

.gutter-condensed {
  @include gutters($spacing-2);
}

.gutter-spacious {
  @include gutters($spacing-4);
}

@each $breakpoint in map-keys($breakpoints) {
  .gutter-#{$breakpoint} { @include gutters($spacing-3); }
  .gutter-#{$breakpoint}-condensed { @include gutters($spacing-2); }
  .gutter-#{$breakpoint}-spacious { @include gutters($spacing-4); }
}

/*
* Padding
*/

.py-0 {
  padding-bottom: $spacing-0;
  padding-top: $spacing-0;
}

.py-1 {
  padding-bottom: $spacing-1;
  padding-top: $spacing-1;
}

.py-2 {
  padding-bottom: $spacing-2;
  padding-top: $spacing-2;
}

.py-3 {
  padding-bottom: $spacing-3;
  padding-top: $spacing-3;
}

.py-4 {
  padding-bottom: $spacing-4;
  padding-top: $spacing-4;
}

.py-5 {
  padding-bottom: $spacing-5;
  padding-top: $spacing-5;
}

.py-6 {
  padding-bottom: $spacing-6;
  padding-top: $spacing-6;
}


.pb-3 {
  padding-bottom: $spacing-3;
}

.px-0 {
  padding-left: $spacing-0;
  padding-right: $spacing-0;
}

.px-1 {
  padding-left: $spacing-1;
  padding-right: $spacing-1;
}

.px-2 {
  padding-left: $spacing-2;
  padding-right: $spacing-2;
}

.px-3 {
  padding-left: $spacing-3;
  padding-right: $spacing-3;
}

.px-4 {
  padding-left: $spacing-4;
  padding-right: $spacing-4;
}

.px-5 {
  padding-left: $spacing-5;
  padding-right: $spacing-5;
}

.px-6 {
  padding-left: $spacing-6;
  padding-right: $spacing-6;
}

.btn-clear {
  background-color: transparent;
  border: none;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  text-align: inherit;
}

.height-full {
  height: 100%;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}
