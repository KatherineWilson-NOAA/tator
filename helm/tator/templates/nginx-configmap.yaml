apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes 1;

    events {
      worker_connections 1024;
    }

    http {
      include mime.types;
      server_names_hash_bucket_size 128;
      proxy_ignore_client_abort on;
      client_max_body_size 0;

      {{- if index .Values "kube-prometheus-stack" "enabled" }}
      server {
        listen 127.0.0.1:80;
        location /status {
          stub_status;
          access_log off;
          allow 127.0.0.1;
          deny all;
        }
      }
      {{- end }}

      {{- if hasKey .Values "redirects" }}
      {{- range .Values.redirects }}

      server {
        listen 80;
        {{- if $.Values.requireHttps }}
        listen 443;
        {{- end }}
        server_name {{ .domain }};
        {{- if $.Values.requireHttps }}
        ssl_certificate /ssl/{{ .tlsCertFile }};
        ssl_certificate_key /ssl/{{ .tlsKeyFile }};

        # Proxy acme challenge files.
        location /.well-known/acme-challenge/ {
          alias /static/challenges/;
          try_files $uri =404;
        }
        {{- end }}

        location / {
          {{- if $.Values.requireHttps }}
          return 301 https://{{ $.Values.domain }}$request_uri;
          {{- else }}
          return 301 http://{{ $.Values.domain }}$request_uri;
          {{- end }}
        }
      }

      {{- end }}
      {{- end }}

      {{- $primarySettings := dict "Values" .Values "domain" .Values.domain "tlsCertFile" .Values.tlsCertFile "tlsKeyFile" .Values.tlsKeyFile }}
      {{include "nginxserver.template" $primarySettings | indent 6}}
      {{- if hasKey .Values "aliases" }}
      {{- range .Values.aliases }}
      {{- $aliasSettings := dict "Values" $.Values "domain" .domain "tlsCertFile" .tlsCertFile "tlsKeyFile" .tlsKeyFile }}
      {{include "nginxserver.template" $aliasSettings | indent 6}}
      {{- end }}
      {{- end }}
    }

