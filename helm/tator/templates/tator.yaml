
{{- $gunicornSettings := dict "Values" .Values "name" "gunicorn-deployment" "app" "gunicorn" "selector" "webServer: \"yes\""  "command" "[gunicorn]" "args" "[\"--workers\", \"3\", \"--worker-class=gevent\", \"--timeout\", \"600\",\"--reload\", \"-b\", \":8000\", \"tator_online.wsgi\"]" "init" "[echo]" "replicas" .Values.hpa.gunicornMinReplicas }}
{{include "tator.template" $gunicornSettings }}
---
{{- $sizerSettings := dict "Values" .Values "name" "sizer-cron" "app" "sizer" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"updateprojects\"]" "schedule" "10 * * * *"  }}
{{include "tatorCron.template" $sizerSettings }}
---
{{- $tempSettings := dict "Values" .Values "name" "prune-temp-cron" "app" "prune-temp" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunetemporaryfiles\"]" "schedule" "20 * * * *" }}
{{include "tatorCron.template" $tempSettings }}
---
{{- $mediaSettings := dict "Values" .Values "name" "prune-media-cron" "app" "prune-media" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunemedia\"]" "schedule" "30 0 * * *" }}
{{include "tatorCron.template" $mediaSettings }}
---
{{- $localizationSettings := dict "Values" .Values "name" "prune-localizations-cron" "app" "prune-localizations" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunelocalizations\"]" "schedule" "30 1 * * *" }}
{{include "tatorCron.template" $localizationSettings }}
---
{{- $stateSettings := dict "Values" .Values "name" "prune-states-cron" "app" "prune-states" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunestates\"]" "schedule" "30 2 * * *" }}
{{include "tatorCron.template" $stateSettings }}
---
{{- $leafSettings := dict "Values" .Values "name" "prune-leaves-cron" "app" "prune-leaves" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"pruneleaves\"]" "schedule" "30 3 * * *" }}
{{include "tatorCron.template" $leafSettings }}
---
{{- $filebeatSettings := dict "Values" .Values "name" "prune-filebeat-cron" "app" "prune-filebeat" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunefilebeat\"]" "schedule" "40 4 * * *" }}
{{include "tatorCron.template" $filebeatSettings }}
---
{{- $uploadCleanupSettings := dict "Values" .Values "name" "upload-cleanup-cron" "app" "upload-cleanup" "selector" "webServer: \"yes\"" "command" "[python3]" "args" "[\"manage.py\", \"uploadcleanup\"]" "schedule" "40 5 * * *" }}
{{include "tatorCron.template" $uploadCleanupSettings }}
---
{{ if .Values.requireHttps }}
{{ if .Values.certCron.enabled }}
{{- $certSettings := dict "Values" .Values "name" "cert-cron" "app" "cert" "selector" "webServer: \"yes\""  "command" "[bash]" "args" "[\"-c\", \"scripts/cert/letsencrypt.sh\"]" "schedule" "50 5 15 * *" "domain" .Values.domain }}
{{- if hasKey .Values "tlsCertFile" }}
{{ $_ := set $certSettings "tlsCertFile" .Values.tlsCertFile }}
{{- end }}
{{- if hasKey .Values "tlsKeyFile" }}
{{ $_ := set $certSettings "tlsKeyFile" .Values.tlsKeyFile }}
{{- end }}
{{- if hasKey .Values "tlsCertSecretName" }}
{{ $_ := set $certSettings "tlsCertSecretName" .Values.tlsCertSecretName }}
{{- end }}
{{- if hasKey .Values "tlsKeySecretName" }}
{{ $_ := set $certSettings "tlsKeySecretName" .Values.tlsKeySecretName }}
{{- end }}
{{include "tatorCron.template" $certSettings }}
---
{{- if hasKey .Values "redirects" }}
{{- range .Values.redirects }}
{{- $name := printf "cert-cron-%s" .tlsKeySecretName }}
{{- $certSettings := dict "Values" $.Values "name" $name "app" "cert" "selector" "webServer: \"yes\""  "command" "[bash]" "args" "[\"-c\", \"scripts/cert/letsencrypt.sh\"]" "schedule" "50 5 16 * *" "domain" .domain "tlsCertFile" .tlsCertFile "tlsKeyFile" .tlsKeyFile "tlsCertSecretName" .tlsCertSecretName "tlsKeySecretName" .tlsKeySecretName }}
{{include "tatorCron.template" $certSettings }}
---
{{ end }}
{{ end }}
{{ end }}
{{ end }}
